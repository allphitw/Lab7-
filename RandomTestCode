#include <iostream>
#include <algorithm>
#include <random>
#include <vector>
#include "BinarySearchTree.h"

using namespace std;

int main() {
    BinarySearchTree bst;

    // Vector to hold the random numbers
    vector<int> randomNumbers;
    srand(time(0));


    // Generate 50 random integers between 1 and 1000
    for (int i = 0; i < 50; i++) {
        randomNumbers.push_back(rand() % 1000 + 1); // Generate random number between 1 and 1000
    }

    // Insert each random number into the BST
    for (int number : randomNumbers) {
        bst.Insert(to_string(number)); // Insert as string to match your Node class
    }

    
    cout << "Inorder traversal of the tree:" << endl;
    bst.PrintTree("inorder");

    
    cout << "\nBalance factors of the tree nodes:" << endl;
    bst.PrintBalanceFactors("inorder");

    return 0;
}
